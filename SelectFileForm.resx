<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>